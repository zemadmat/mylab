gglobal
      log /dev/log local5 debug
      chroot /var/lib/haproxy
      stats socket /run/haproxy/admin.sock mode 660 level admin
      stats timeout 30s
      user haproxy
      group haproxy
      daemon

defaults
      log global
      mode http
      option httplog
      option dontlognull
      timeout connect 5000
      timeout client 50000
      timeout server 50000
      errorfile 400 /etc/haproxy/errors/400.http

frontend myapp_front #1er frontend
      bind *:80 #address de bind
      mode http #mode
      default_backend myapp_back # vers le backend associe

backend myapp_back
      mode http
      option httpchk GET / # check de la racine du site
      server srv1 192.168.122.238:80 check # check du site si pas dispo n'est plus dans le pool
      server srv2 192.168.122.195:80 check # check du site si pas dispo n'est plus dans le pool

# 2eme site servi par HAProxy avec les meme reglages
frontend python_front
      bind *:8080
      mode http
      default_backend python_back

backend python_back
      mode http
      option httpchk GET /
      http-check expect string OK # check avec attente de la string OK dans la page retourn√©e
      server srv1 192.168.122.238:9000 check
      server srv2 192.168.122.195:9000 check


listen stats
    bind *:9000
    stats enable
    stats uri /stats
    stats refresh 2s
    stats auth user:pass